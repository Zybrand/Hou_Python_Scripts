# This self tool imports alembic caches to new geometry and sets up some initial attributes like velocity

#go to obj directory
obj = hou.node("/obj")

#set file path of alembic file and abc settings
buttons = ('ok','skip', 'cancel')
user_input = hou.ui.displayMessage('Choose File', buttons)

#execute if not canceled
if user_input != 2:
    #create geo with alembic reader inside, maintain run init scripts and delete
    #defualt file node after otherwise render tab on geo node will be empty
    geo = obj.createNode("geo", "geo1")
    geo.children()[0].destroy()
    abc = geo.createNode("alembic")

    if user_input == 0:
        user_file = hou.ui.selectFile(None, 'File Path')
        abc.parm("fileName").set(user_file)
    else:
        user_file = '$HIP'
    
    abc.parm("missingfile").set(1)
    abc.parm("groupnames").set(3)

    #create unpack sop
    my_pack = geo.createNode("unpack")
    my_pack.setFirstInput(abc)
    my_pack.moveToGoodPosition()

    #creat convert to poly
    my_convert = geo.createNode("convert")
    my_convert.setFirstInput(my_pack)
    my_convert.moveToGoodPosition()
    
    #create normal sop
    new_normal = geo.createNode("normal")
    new_normal.setFirstInput(my_convert)
    new_normal.moveToGoodPosition()
    
    new_normal.parm("type").set(0)
    
    #create trail and calc vel
    vel = geo.createNode("trail")
    vel.setFirstInput(new_normal)
    vel.moveToGoodPosition()
    
    vel.parm("result").set(3)
    vel.parm("velapproximation").set(1)
    
    vel.setDisplayFlag(True)
    vel.setRenderFlag(True)
    
    #set node name
    name = user_file.split("/").pop()
    name = name.split(".")[0]
    
    geo.setName(name, unique_name=True)
    geo.setColor(hou.Color([1,0.2,0.3]))

#Zybrand Jacobs
